import type { BlockScope } from '.js';
import type { CatchScope } from '.js';
import type { ClassFieldInitializerScope } from '.js';
import type { ClassScope } from '.js';
import type { ClassStaticBlockScope } from '.js';
import type { ConditionalTypeScope } from '.js';
import type { ForScope } from '.js';
import type { FunctionExpressionNameScope } from '.js';
import type { FunctionScope } from '.js';
import type { FunctionTypeScope } from '.js';
import type { GlobalScope } from '.js';
import type { MappedTypeScope } from '.js';
import type { ModuleScope } from '.js';
import type { SwitchScope } from '.js';
import type { TSEnumScope } from '.js';
import type { TSModuleScope } from '.js';
import type { TypeScope } from '.js';
import type { WithScope } from '.js';
export type Scope = BlockScope | CatchScope | ClassFieldInitializerScope | ClassScope | ClassStaticBlockScope | ConditionalTypeScope | ForScope | FunctionExpressionNameScope | FunctionScope | FunctionTypeScope | GlobalScope | MappedTypeScope | ModuleScope | SwitchScope | TSEnumScope | TSModuleScope | TypeScope | WithScope;
//# sourceMappingURL=Scope.d.ts.map
