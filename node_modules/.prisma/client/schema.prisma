generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model NguoiDung {
  taiKhoan      Int     @id @default(autoincrement()) @map("tai_khoan")
  hoTen         String  @map("ho_ten")
  email         String  @unique
  soDt          String  @map("so_dt")
  matKhau       String  @map("mat_khau")
  loaiNguoiDung String  @default("KhachHang") @map("loai_nguoi_dung")
  datVes        DatVe[]

  @@map("NguoiDung")
}

model Phim {
  maPhim        Int         @id @default(autoincrement()) @map("ma_phim")
  tenPhim       String      @map("ten_phim")
  trailer       String?
  hinhAnh       String?     @map("hinh_anh")
  moTa          String?     @map("mo_ta")
  ngayKhoiChieu DateTime?   @map("ngay_khoi_chieu")
  danhGia       Int?        @map("danh_gia")
  hot           Boolean?    @default(false)
  dangChieu     Boolean?    @default(false) @map("dang_chieu")
  sapChieu      Boolean?    @default(false) @map("sap_chieu")
  banners       Banner[]
  lichChieus    LichChieu[]

  @@map("Phim")
}

model Banner {
  maBanner Int     @id @default(autoincrement()) @map("ma_banner")
  hinhAnh  String?
  maPhim   Int     @map("ma_phim")
  phim     Phim    @relation(fields: [maPhim], references: [maPhim])

  @@map("Banner")
}

model HeThongRap {
  maHeThongRap  Int      @id @default(autoincrement()) @map("ma_he_thong_rap")
  tenHeThongRap String   @map("ten_he_thong_rap")
  logo          String?
  cumRaps       CumRap[]

  @@map("HeThongRap")
}

model CumRap {
  maCumRap     Int        @id @default(autoincrement()) @map("ma_cum_rap")
  tenCumRap    String     @map("ten_cum_rap")
  diaChi       String?    @map("dia_chi")
  maHeThongRap Int        @map("ma_he_thong_rap")
  heThongRap   HeThongRap @relation(fields: [maHeThongRap], references: [maHeThongRap])
  rapPhims     RapPhim[]

  @@map("CumRap")
}

model RapPhim {
  maRap      Int         @id @default(autoincrement()) @map("ma_rap")
  tenRap     String      @map("ten_rap")
  maCumRap   Int         @map("ma_cum_rap")
  cumRap     CumRap      @relation(fields: [maCumRap], references: [maCumRap])
  gheList    Ghe[]
  lichChieus LichChieu[]

  @@map("RapPhim")
}

model Ghe {
  maGhe   Int     @id @default(autoincrement()) @map("ma_ghe")
  tenGhe  String  @map("ten_ghe")
  loaiGhe String  @map("loai_ghe")
  maRap   Int     @map("ma_rap")
  rap     RapPhim @relation(fields: [maRap], references: [maRap])
  datVes  DatVe[]

  @@map("Ghe")
}

model LichChieu {
  maLichChieu  Int      @id @default(autoincrement()) @map("ma_lich_chieu")
  maRap        Int      @map("ma_rap")
  maPhim       Int      @map("ma_phim")
  ngayGioChieu DateTime @map("ngay_gio_chieu")
  giaVe        Int      @map("gia_ve")
  rap          RapPhim  @relation(fields: [maRap], references: [maRap])
  phim         Phim     @relation(fields: [maPhim], references: [maPhim])
  datVes       DatVe[]

  @@map("LichChieu")
}

model DatVe {
  id          Int       @id @default(autoincrement())
  taiKhoan    Int       @map("tai_khoan")
  maLichChieu Int       @map("ma_lich_chieu")
  maGhe       Int       @map("ma_ghe")
  createdAt   DateTime  @default(now())
  nguoiDung   NguoiDung @relation(fields: [taiKhoan], references: [taiKhoan])
  lichChieu   LichChieu @relation(fields: [maLichChieu], references: [maLichChieu])
  ghe         Ghe       @relation(fields: [maGhe], references: [maGhe])

  @@unique([maLichChieu, maGhe])
  @@map("DatVe")
}
